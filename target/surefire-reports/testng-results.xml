<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="12" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Automation Framework CS PORTAl Test Suite" duration-ms="371154" started-at="2021-03-20T02:57:23 IST" finished-at="2021-03-20T03:03:34 IST">
    <groups>
    </groups>
    <test name="LOGIN TO BACKEND AGENT" duration-ms="114539" started-at="2021-03-20T02:57:23 IST" finished-at="2021-03-20T02:59:17 IST">
      <class name="tests.BackendAgentLoginTest">
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T02:57:24 IST" finished-at="2021-03-20T02:57:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="checkExecution" is-config="true" duration-ms="8" started-at="2021-03-20T02:57:24 IST" finished-at="2021-03-20T02:57:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="LoggingIN(java.lang.reflect.Method, Utils.DataProviders.TestDatabean)[pri:1, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="LoggingIN" duration-ms="64902" started-at="2021-03-20T02:57:24 IST" description="Logging IN " data-provider="loginData" finished-at="2021-03-20T02:58:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentLoginTest.LoggingIN(java.lang.reflect.Method,Utils.DataProviders.TestDatabean)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Utils.DataProviders.TestDatabean@272ce069]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoggingIN -->
        <test-method status="PASS" signature="agentQueueLogin(java.lang.reflect.Method)[pri:2, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="agentQueueLogin" duration-ms="39249" started-at="2021-03-20T02:58:29 IST" description="Backend Agent Login into Queue" depends-on-methods="tests.BackendAgentLoginTest.LoggingIN" finished-at="2021-03-20T02:59:09 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentLoginTest.agentQueueLogin(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- agentQueueLogin -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T02:58:29 IST" finished-at="2021-03-20T02:58:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T02:58:29 IST" finished-at="2021-03-20T02:58:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="methodLevelSetup" is-config="true" duration-ms="1" started-at="2021-03-20T02:59:09 IST" finished-at="2021-03-20T02:59:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T02:59:09 IST" finished-at="2021-03-20T02:59:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="ValidateTicket(java.lang.reflect.Method)[pri:3, instance:tests.BackendAgentLoginTest@3bcd05cb]" name="ValidateTicket" duration-ms="8795" started-at="2021-03-20T02:59:09 IST" description="Ticket Search " depends-on-methods="tests.BackendAgentLoginTest.agentQueueLogin" finished-at="2021-03-20T02:59:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentLoginTest.ValidateTicket(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateTicket -->
      </class> <!-- tests.BackendAgentLoginTest -->
    </test> <!-- LOGIN TO BACKEND AGENT -->
    <test name="Validate BACKEND AGENT Filter Options" duration-ms="49894" started-at="2021-03-20T02:59:18 IST" finished-at="2021-03-20T03:00:08 IST">
      <class name="tests.BackendAgentFilterTest">
        <test-method status="PASS" signature="agentQueueLogin(java.lang.reflect.Method)[pri:1, instance:tests.BackendAgentFilterTest@3214ee6]" name="agentQueueLogin" duration-ms="39498" started-at="2021-03-20T02:59:18 IST" description="Backend Agent Queue Login Page" finished-at="2021-03-20T02:59:57 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentFilterTest.agentQueueLogin(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- agentQueueLogin -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentFilterTest@3214ee6]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T02:59:18 IST" finished-at="2021-03-20T02:59:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentFilterTest@3214ee6]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T02:59:18 IST" finished-at="2021-03-20T02:59:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="validateFilter(java.lang.reflect.Method)[pri:2, instance:tests.BackendAgentFilterTest@3214ee6]" name="validateFilter" duration-ms="10395" started-at="2021-03-20T02:59:57 IST" description="Validate Filter Tab for Backend Agent" depends-on-methods="tests.BackendAgentFilterTest.agentQueueLogin" finished-at="2021-03-20T03:00:08 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentFilterTest.validateFilter(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFilter -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentFilterTest@3214ee6]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T02:59:57 IST" finished-at="2021-03-20T02:59:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentFilterTest@3214ee6]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T02:59:57 IST" finished-at="2021-03-20T02:59:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
      </class> <!-- tests.BackendAgentFilterTest -->
    </test> <!-- Validate BACKEND AGENT Filter Options -->
    <test name="BACKEND AGENT Update Ticket" duration-ms="58555" started-at="2021-03-20T03:00:08 IST" finished-at="2021-03-20T03:01:06 IST">
      <class name="tests.BackendAgentUpdateTicket">
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentUpdateTicket@2f01783a]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T03:00:08 IST" finished-at="2021-03-20T03:00:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="updateTicket(java.lang.reflect.Method, Utils.DataProviders.TicketStateDataBean)[pri:1, instance:tests.BackendAgentUpdateTicket@2f01783a]" name="updateTicket" duration-ms="58319" started-at="2021-03-20T03:00:08 IST" description="Backend Agent Update Ticket" data-provider="ticketState" finished-at="2021-03-20T03:01:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentUpdateTicket.updateTicket(java.lang.reflect.Method,Utils.DataProviders.TicketStateDataBean) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Utils.DataProviders.TicketStateDataBean@24954e82]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateTicket -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentUpdateTicket@2f01783a]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T03:00:08 IST" finished-at="2021-03-20T03:00:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
      </class> <!-- tests.BackendAgentUpdateTicket -->
    </test> <!-- BACKEND AGENT Update Ticket -->
    <test name="BACKEND AGENT Add Comment on Ticket" duration-ms="115157" started-at="2021-03-20T03:01:07 IST" finished-at="2021-03-20T03:03:02 IST">
      <class name="tests.BackendAgentAddComment">
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="checkExecution" is-config="true" duration-ms="1" started-at="2021-03-20T03:01:07 IST" finished-at="2021-03-20T03:01:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T03:01:07 IST" finished-at="2021-03-20T03:01:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="agentQueueLogin(java.lang.reflect.Method)[pri:1, instance:tests.BackendAgentAddComment@54e041a4]" name="agentQueueLogin" duration-ms="39258" started-at="2021-03-20T03:01:07 IST" description="Backend Agent Queue Login Page" finished-at="2021-03-20T03:01:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentAddComment.agentQueueLogin(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- agentQueueLogin -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T03:01:46 IST" finished-at="2021-03-20T03:01:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T03:01:46 IST" finished-at="2021-03-20T03:01:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method name="addNewComment" signature="addNewComment(java.lang.reflect.Method, Utils.DataProviders.TicketStateDataBean)[pri:2, instance:tests.BackendAgentAddComment@54e041a4]" status="PASS" duration-ms="20015" finished-at="2021-03-20T03:02:06 IST" started-at="2021-03-20T03:01:46 IST" depends-on-methods="tests.BackendAgentAddComment.agentQueueLogin" data-provider="ticketState" description="Backend agent add new comment on Ticket">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentAddComment.addNewComment(java.lang.reflect.Method,Utils.DataProviders.TicketStateDataBean) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Utils.DataProviders.TicketStateDataBean@4850d66b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNewComment -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T03:02:06 IST" finished-at="2021-03-20T03:02:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="validateIssueCommentBS(java.lang.reflect.Method)[pri:3, instance:tests.BackendAgentAddComment@54e041a4]" name="validateIssueCommentBS" duration-ms="542" started-at="2021-03-20T03:02:06 IST" description="Validate issue comment as Backend Agent" depends-on-methods="tests.BackendAgentAddComment.agentQueueLogin" finished-at="2021-03-20T03:02:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.BackendAgentAddComment.validateIssueCommentBS(java.lang.reflect.Method) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIssueCommentBS -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T03:02:06 IST" finished-at="2021-03-20T03:02:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="methodLevelSetup" is-config="true" duration-ms="1" started-at="2021-03-20T03:02:06 IST" finished-at="2021-03-20T03:02:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="editComment()[pri:4, instance:tests.BackendAgentAddComment@54e041a4]" name="editComment" duration-ms="19138" started-at="2021-03-20T03:02:06 IST" description="Validate Edit comment as Backend Agent" depends-on-methods="tests.BackendAgentAddComment.addNewComment" finished-at="2021-03-20T03:02:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editComment -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T03:02:06 IST" finished-at="2021-03-20T03:02:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T03:02:26 IST" finished-at="2021-03-20T03:02:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="deleteLastAddedComment()[pri:5, instance:tests.BackendAgentAddComment@54e041a4]" name="deleteLastAddedComment" duration-ms="36064" started-at="2021-03-20T03:02:26 IST" description="Validate Delete comment as Backend Agent" depends-on-methods="tests.BackendAgentAddComment.agentQueueLogin" finished-at="2021-03-20T03:03:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteLastAddedComment -->
        <test-method status="PASS" signature="checkExecution()[pri:0, instance:tests.BackendAgentAddComment@54e041a4]" name="checkExecution" is-config="true" duration-ms="0" started-at="2021-03-20T03:02:26 IST" finished-at="2021-03-20T03:02:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkExecution -->
      </class> <!-- tests.BackendAgentAddComment -->
    </test> <!-- BACKEND AGENT Add Comment on Ticket -->
    <test name="Logout Test from Backend agent" duration-ms="32303" started-at="2021-03-20T03:03:02 IST" finished-at="2021-03-20T03:03:34 IST">
      <class name="tests.LogoutTest">
        <test-method status="PASS" signature="classLevelSetup()[pri:0, instance:tests.LogoutTest@3f1d2e23]" name="classLevelSetup" is-config="true" duration-ms="3390" started-at="2021-03-20T02:57:20 IST" finished-at="2021-03-20T02:57:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classLevelSetup -->
        <test-method status="PASS" signature="Logout(java.lang.reflect.Method)[pri:0, instance:tests.LogoutTest@3f1d2e23]" name="Logout" duration-ms="32302" started-at="2021-03-20T03:03:02 IST" finished-at="2021-03-20T03:03:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LogoutTest.Logout(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Logout -->
        <test-method status="PASS" signature="methodLevelSetup()[pri:0, instance:tests.LogoutTest@3f1d2e23]" name="methodLevelSetup" is-config="true" duration-ms="0" started-at="2021-03-20T03:03:02 IST" finished-at="2021-03-20T03:03:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:tests.LogoutTest@3f1d2e23]" name="teardown" is-config="true" duration-ms="647" started-at="2021-03-20T03:03:34 IST" finished-at="2021-03-20T03:03:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- tests.LogoutTest -->
    </test> <!-- Logout Test from Backend agent -->
  </suite> <!-- Automation Framework CS PORTAl Test Suite -->
</testng-results>
